include "application"

play {
    server {
        pidfile.path = "/dev/null"
    }
    http.secret.key = ${APPLICATION_SECRET}
}

akka.discovery.method = akka-dns

# after 60s of unsuccessul attempts to form a cluster, 
# the actor system will shut down
akka.cluster.shutdown-after-unsuccessful-join-seed-nodes = 60s

# exit jvm on actor system termination
# this will allow Kubernetes to restart the pod
lagom.cluster.exit-jvm-when-system-terminated = on

cassandra.default {
    contact-points = [${?CASSANDRA_CLUSTER_HOSTS}]
    session-provider = akka.persistence.cassandra.ConfigSessionProvider
}

cassandra-journal {
  contact-points = ${cassandra.default.contact-points}
  session-provider = ${cassandra.default.session-provider}
}

cassandra-snapshot-store {
  contact-points = ${cassandra.default.contact-points}
  session-provider = ${cassandra.default.session-provider}
}

lagom.persistence.read-side.cassandra {
  contact-points = ${cassandra.default.contact-points}
  session-provider = ${cassandra.default.session-provider}
}

db.default {
    driver = "org.postgresql.Driver"
    url = ${POSTGRESQL_URL}
    username = ${POSTGRESQL_USERNAME}
    password = ${POSTGRESQL_PASSWORD}
}
jdbc-defaults.slick.profile = "slick.jdbc.PostgresProfile$"

lagom.persistence.jdbc.create-tables.auto = false

akka.management {
    cluster.bootstrap {
        contact-point-discovery {
            discovery-method = kubernetes-api
            service-name = "lagom-bank-service"
            required-contact-point-nr = ${REQUIRED_CONTACT_POINT_NR}
        }
    }
}